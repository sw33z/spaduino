name: Build and test

on: [push]

jobs:
  build-and-test:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Cache pip
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Cache PlatformIO
      uses: actions/cache@v2
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
    - name: Set up Python
      uses: actions/setup-python@v2
    - name: Install PlatformIO
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade platformio
    - name: Build Arduino Mega
      run: pio run -d ./ -e mega 
    - name: Run tests for Native environment
      run: pio test -d ./ -e native

  coverage:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies
      run: |
        DEBIAN_FRONTEND=noninteractive sudo apt-get install -y build-essential cmake libgtest-dev googletest lcov gcovr wget python python3-pip libpthread-stubs0-dev
    - name: Build
      env:
        CODECOV_TOKEN : ${{ secrets.CODECOV_TOKEN }}
      run: |
        cp -r test/coverage_resources/cmake ./
        cp test/coverage_resources/CMakeLists.txt_main ./CMakeLists.txt
        cp test/coverage_resources/CMakeLists.txt_test ./test/CMakeLists.txt
        mkdir coverage
        cd coverage
        cmake -DCMAKE_BUILD_TYPE=coverage ..
        make && make test && make coverage
        cd ..
        lcov --remove coverage/coverage.info './test/mocks' --output-file coverage/coverage2.info 
    - name: Codecov upload
      env:
        CODECOV_TOKEN : ${{ secrets.CODECOV_TOKEN }}
      run: |
        curl -Os https://uploader.codecov.io/latest/linux/codecov
        chmod +x codecov
        ./codecov -t ${CODECOV_TOKEN} -f coverage/coverage2.info